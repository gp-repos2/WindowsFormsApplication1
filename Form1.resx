<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axSpreadsheet1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAwQkAAAIB
        AAAAAQAAAAAbAAAAQ2Fubm90IExpY2Vuc2UgaW4gdGhpcyBob3N0AAAAAJEJAAA8P3htbCB2ZXJzaW9u
        PSIxLjAiPz4NCjxzczpXb3JrYm9vayB4bWxuczp4PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9m
        ZmljZTpleGNlbCINCiB4bWxuczpzcz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6c3By
        ZWFkc2hlZXQiDQogeG1sbnM6Yz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6Y29tcG9u
        ZW50OnNwcmVhZHNoZWV0Ij4NCiA8eDpFeGNlbFdvcmtib29rPg0KICA8eDpQcm90ZWN0U3RydWN0dXJl
        PkZhbHNlPC94OlByb3RlY3RTdHJ1Y3R1cmU+DQogIDx4OkFjdGl2ZVNoZWV0PjA8L3g6QWN0aXZlU2hl
        ZXQ+DQogPC94OkV4Y2VsV29ya2Jvb2s+DQogPHNzOlN0eWxlcz4NCiAgPHNzOlN0eWxlIHNzOklEPSJE
        ZWZhdWx0Ij4NCiAgIDxzczpBbGlnbm1lbnQgc3M6SG9yaXpvbnRhbD0iQXV0b21hdGljIiBzczpSb3Rh
        dGU9IjAuMCIgc3M6VmVydGljYWw9IkJvdHRvbSINCiAgICBzczpSZWFkaW5nT3JkZXI9IkNvbnRleHQi
        Lz4NCiAgIDxzczpCb3JkZXJzPg0KICAgPC9zczpCb3JkZXJzPg0KICAgPHNzOkZvbnQgc3M6Rm9udE5h
        bWU9IkFyaWFsIEN5ciIgc3M6U2l6ZT0iMTAiIHNzOkNvbG9yPSJBdXRvbWF0aWMiIHNzOkJvbGQ9IjAi
        DQogICAgc3M6SXRhbGljPSIwIiBzczpVbmRlcmxpbmU9Ik5vbmUiLz4NCiAgIDxzczpJbnRlcmlvciBz
        czpDb2xvcj0iQXV0b21hdGljIiBzczpQYXR0ZXJuPSJOb25lIi8+DQogICA8c3M6TnVtYmVyRm9ybWF0
        IHNzOkZvcm1hdD0iR2VuZXJhbCIvPg0KICAgPHNzOlByb3RlY3Rpb24gc3M6UHJvdGVjdGVkPSIxIi8+
        DQogIDwvc3M6U3R5bGU+DQogPC9zczpTdHlsZXM+DQogPGM6Q29tcG9uZW50T3B0aW9ucz4NCiAgPGM6
        TGFiZWw+DQogICA8YzpDYXB0aW9uPtCt0LvQtdC60YLRgNC+0L3QvdCw0Y8g0YLQsNCx0LvQuNGG0LAg
        TWljcm9zb2Z0IE9mZmljZTwvYzpDYXB0aW9uPg0KICA8L2M6TGFiZWw+DQogIDxjOk1heEhlaWdodD44
        MCU8L2M6TWF4SGVpZ2h0Pg0KICA8YzpNYXhXaWR0aD44MCU8L2M6TWF4V2lkdGg+DQogIDxjOk5leHRT
        aGVldE51bWJlcj42PC9jOk5leHRTaGVldE51bWJlcj4NCiAgPGM6T3JpZ2luYWxTb3VyY2UgYzpUeXBl
        PSI2Ii8+DQogPC9jOkNvbXBvbmVudE9wdGlvbnM+DQogPHg6V29ya2Jvb2tPcHRpb25zPg0KICA8YzpP
        V0NWZXJzaW9uPjExLjAuMC42NTU1ICAgICAgICAgPC9jOk9XQ1ZlcnNpb24+DQogIDx4OkhlaWdodD4x
        MTIxODwveDpIZWlnaHQ+DQogIDx4OldpZHRoPjE4NDE1PC94OldpZHRoPg0KIDwveDpXb3JrYm9va09w
        dGlvbnM+DQogPHNzOldvcmtzaGVldCBzczpOYW1lPSLQm9C40YHRgjEiPg0KICA8eDpXb3Jrc2hlZXRP
        cHRpb25zPg0KICAgPHg6U2VsZWN0ZWQvPg0KICAgPHg6Vmlld2FibGVSYW5nZT5SMTpSMjYyMTQ0PC94
        OlZpZXdhYmxlUmFuZ2U+DQogICA8eDpTZWxlY3Rpb24+UjJDMTwveDpTZWxlY3Rpb24+DQogICA8eDpU
        b3BSb3dWaXNpYmxlPjE8L3g6VG9wUm93VmlzaWJsZT4NCiAgIDx4OkxlZnRDb2x1bW5WaXNpYmxlPjA8
        L3g6TGVmdENvbHVtblZpc2libGU+DQogICA8eDpQcm90ZWN0Q29udGVudHM+RmFsc2U8L3g6UHJvdGVj
        dENvbnRlbnRzPg0KICA8L3g6V29ya3NoZWV0T3B0aW9ucz4NCiAgPGM6V29ya3NoZWV0T3B0aW9ucz4N
        CiAgPC9jOldvcmtzaGVldE9wdGlvbnM+DQogPC9zczpXb3Jrc2hlZXQ+DQogPHNzOldvcmtzaGVldCBz
        czpOYW1lPSLQm9C40YHRgjIiPg0KICA8eDpXb3Jrc2hlZXRPcHRpb25zPg0KICAgPHg6Vmlld2FibGVS
        YW5nZT5SMTpSMjYyMTQ0PC94OlZpZXdhYmxlUmFuZ2U+DQogICA8eDpTZWxlY3Rpb24+UjFDMTwveDpT
        ZWxlY3Rpb24+DQogICA8eDpUb3BSb3dWaXNpYmxlPjA8L3g6VG9wUm93VmlzaWJsZT4NCiAgIDx4Okxl
        ZnRDb2x1bW5WaXNpYmxlPjA8L3g6TGVmdENvbHVtblZpc2libGU+DQogICA8eDpQcm90ZWN0Q29udGVu
        dHM+RmFsc2U8L3g6UHJvdGVjdENvbnRlbnRzPg0KICA8L3g6V29ya3NoZWV0T3B0aW9ucz4NCiAgPGM6
        V29ya3NoZWV0T3B0aW9ucz4NCiAgPC9jOldvcmtzaGVldE9wdGlvbnM+DQogPC9zczpXb3Jrc2hlZXQ+
        DQogPHNzOldvcmtzaGVldCBzczpOYW1lPSLQm9C40YHRgjMiPg0KICA8eDpXb3Jrc2hlZXRPcHRpb25z
        Pg0KICAgPHg6Vmlld2FibGVSYW5nZT5SMTpSMjYyMTQ0PC94OlZpZXdhYmxlUmFuZ2U+DQogICA8eDpT
        ZWxlY3Rpb24+UjFDMTwveDpTZWxlY3Rpb24+DQogICA8eDpUb3BSb3dWaXNpYmxlPjA8L3g6VG9wUm93
        VmlzaWJsZT4NCiAgIDx4OkxlZnRDb2x1bW5WaXNpYmxlPjA8L3g6TGVmdENvbHVtblZpc2libGU+DQog
        ICA8eDpQcm90ZWN0Q29udGVudHM+RmFsc2U8L3g6UHJvdGVjdENvbnRlbnRzPg0KICA8L3g6V29ya3No
        ZWV0T3B0aW9ucz4NCiAgPGM6V29ya3NoZWV0T3B0aW9ucz4NCiAgPC9jOldvcmtzaGVldE9wdGlvbnM+
        DQogPC9zczpXb3Jrc2hlZXQ+DQo8L3NzOldvcmtib29rPg0KCw==
</value>
  </data>
</root>